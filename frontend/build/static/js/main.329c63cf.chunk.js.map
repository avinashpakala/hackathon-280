{"version":3,"sources":["logo.svg","reduxutils/actioncreators/useraction.js","views/Header/header.js","swa_logo_dark.svg","webConfig.js","views/Macroeconomic/gdpPage.js","views/Macroeconomic/GdpCurrentUsd.js","views/Macroeconomic/GdpCurrentAccoutnBalance.js","views/Macroeconomic/FDINet.js","views/Macroeconomic/FDINetInflows.js","views/Macroeconomic/FDINetOutflows.js","views/Macroeconomic/FDINetOutflowsPercentGDP.js","views/Agriculture/Manufacturing.js","views/Agriculture/AnnualGrowth.js","views/Agriculture/FertilizerProd.js","views/Agriculture/FertilizerCons.js","views/Debt/ImportReserves.js","views/Debt/GoldReserves.js","views/Debt/TotalReserves.js","views/Debt/DebtServices.js","views/Debt/TotalDebt.js","views/Debt/CurrentGni.js","views/Crops/Bananas.js","views/Crops/Mangoes.js","views/Crops/Walnuts.js","views/Import/Import.js","views/Agriculture/Credit.js","views/Yield/WalnutsIran.js","views/Yield/MangoesPhilippines.js","views/Container/DashBoard/DashBoard.js","App.js","reportWebVitals.js","reduxutils/reducer/userReducer.js","reduxutils/reducer/reducers.js","reduxutils/store.js","index.js"],"names":["_g","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","preserveAspectRatio","ref","id","transform","fill","stroke","d","ForwardRef","setCountry","email","dispatch","type","payload","setName","name","disableAnno","disablePredict","Header","useDispatch","bindActionCreators","userActionCreator","country","useSelector","state","userInfo","AppBar","style","background","position","sx","zIndex","theme","drawer","Toolbar","color","Typography","variant","noWrap","component","fontWeight","marginLeft","className","onChange","e","value","val","backendServer","GdpGrowth","useState","startDate","setStartDate","endDate","setEndDate","headerType","graphData","setGraphData","annotations","setAnnotations","React","value2","setValue2","years","label","valuetext","useEffect","axios","get","then","res","status","recs","data","window","alert","fv","push","console","log","Card","Body","Row","Slider","getAriaLabel","event","newValue","activeThumb","Array","isArray","clamped","Math","min","max","find","p","valueLabelDisplay","step","getAriaValueText","disableSwap","marks","Col","md","chartType","legendToggle","options","hAxis","format","hidden","List","map","ListItem","ListItemIcon","size","ListItemText","fontSize","primary","secondary","TextField","placeholder","multiline","Button","onClick","document","getElementById","arr","an","GdpCurrentUsd","GdpCurrentAccountBalance","FdiNet","FdiNetInflows","FDINetOutflows","FDINetOutflowsPercentGDP","Manufacturing","AnnualGrowth","FertilizerProd","FertilizerCons","ImportReserves","GoldReserves","TotalReserves","DebtServices","TotalDebt","CurrentGni","Bananas","useJsApiLoader","googleMapsApiKey","isLoaded","display","flex","center","lat","lng","zoom","mapContainerStyle","marginTop","Mangoes","Walnuts","lgn","Import","commodity","setCommodity","year","setYear","prevYear","setPrevYear","graphDataSankey","setGraphDataSankey","yearList","setYearList","yl","fvs","recAr","concat","DropdownButton","onSelect","Dropdown","Item","eventKey","selectYearHandle","yr","Credit","WalnutsIran","MangoesPhilippines","DashBoard","handleChange","panel","isExpanded","setState","setPage","page","redirectFlag","componentDidMount","changeGraphType","Drawer","flexShrink","boxSizing","Box","overflow","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","button","disableTypography","Divider","flexGrow","GdpCurrentAccoutnBalance","FDINet","FDINetInflows","connect","createMuiTheme","palette","main","contrastText","App","CssBaseline","changeCountry","Container","fluid","ThemeProvider","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","persistConfig","storage","appReducers","combineReducers","action","nameState","newstate","stt","st","reducers","persistReducer","undefined","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.329c63cf.chunk.js","sourcesContent":["var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"2048.000000pt\",\n    height: \"2048.000000pt\",\n    viewBox: \"0 0 2048.000000 2048.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,2048.000000) scale(0.100000,-0.100000)\",\n    fill: \"#000000\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8602 20355 c3 -5 60 -109 126 -230 450 -822 905 -1754 1259 -2579 l64 -150 -12 -75 c-20 -122 -16 -339 8 -452 48 -223 165 -447 322 -613 73 -77 303 -268 312 -258 10 11 76 238 88 302 29 157 21 309 -26 470 -51 176 -183 386 -326 515 -56 51 -188 144 -264 186 -22 12 -40 41 -78 125 -255 574 -580 1226 -885 1774 -181 326 -555 957 -583 985 -7 7 -8 7 -5 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10461 19717 c-1 -10 107 -399 190 -687 260 -896 399 -1419 479 -1805 38 -186 100 -545 100 -584 0 -16 -20 -62 -47 -106 -131 -219 -193 -452 -193 -732 0 -381 101 -714 323 -1066 l55 -88 60 153 c117 295 146 448 146 753 0 369 -46 592 -203 989 -38 96 -54 154 -76 281 -94 554 -235 1060 -665 2385 -170 527 -168 519 -169 507z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8166 18585 c227 -309 547 -789 879 -1315 248 -393 535 -829 684 -1038 88 -123 110 -163 167 -300 116 -279 229 -474 395 -682 205 -257 391 -413 713 -594 65 -36 120 -65 123 -63 7 7 -36 273 -57 358 -110 429 -395 821 -745 1022 -99 57 -203 99 -318 128 l-87 22 -128 176 c-178 244 -344 484 -582 841 -389 583 -731 1064 -963 1355 -86 107 -130 156 -81 90z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11411 18384 c0 -11 3 -14 6 -6 3 7 2 16 -1 19 -3 4 -6 -2 -5 -13z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11421 18355 c-1 -6 60 -301 135 -655 323 -1535 387 -1897 439 -2500 l16 -180 -64 -89 c-168 -234 -254 -482 -277 -797 -26 -372 46 -723 221 -1074 43 -85 84 -163 91 -173 13 -17 21 -4 85 130 169 354 222 569 230 935 6 241 -5 386 -42 573 -23 115 -40 177 -118 440 -26 89 -38 155 -47 255 -36 417 -128 942 -271 1550 -80 341 -397 1600 -398 1585z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2611 17690 c117 -135 469 -530 714 -800 956 -1055 1400 -1587 1759 -2113 l88 -128 -10 -147 c-19 -296 20 -532 133 -798 165 -387 458 -746 820 -1006 84 -60 277 -179 282 -174 8 7 -16 309 -33 426 -32 220 -115 484 -214 680 -189 377 -408 661 -748 970 -81 74 -164 157 -183 185 -237 341 -597 784 -986 1213 -294 322 -1379 1463 -1621 1702 l-66 65 65 -75z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M95 17503 c6 -6 147 -109 315 -228 977 -698 2178 -1646 2904 -2291 l89 -79 41 -120 c51 -145 107 -263 176 -370 183 -280 486 -518 807 -635 129 -47 463 -131 463 -117 0 37 -52 333 -69 393 -59 207 -161 376 -330 545 -259 258 -582 404 -962 435 l-86 7 -124 104 c-933 788 -1904 1507 -2949 2184 -270 175 -291 188 -275 172z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8543 17133 c189 -262 487 -713 739 -1118 86 -137 242 -389 348 -560 222 -356 415 -652 563 -863 92 -131 110 -165 167 -307 73 -183 179 -397 265 -535 196 -314 463 -590 750 -775 131 -84 296 -177 303 -171 9 9 -16 227 -39 340 -106 520 -463 1009 -889 1216 -74 35 -252 97 -330 114 -41 9 -367 474 -856 1221 -364 557 -528 797 -778 1135 -118 160 -296 390 -302 390 -2 0 24 -39 59 -87z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12262 17110 c0 -14 2 -19 5 -12 2 6 2 18 0 25 -3 6 -5 1 -5 -13z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12271 17072 c0 -8 60 -424 134 -925 218 -1480 259 -1851 272 -2477 l6 -295 -63 -75 c-178 -211 -291 -445 -345 -714 -93 -466 -42 -922 152 -1365 30 -69 59 -137 65 -151 9 -23 14 -17 74 85 250 420 352 755 370 1210 11 272 -17 512 -100 865 -42 177 -44 194 -50 390 -22 681 -94 1205 -376 2730 -136 740 -137 743 -139 722z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4330 16806 c0 -2 8 -10 18 -17 15 -13 16 -12 3 4 -13 16 -21 21 -21 13z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4857 16133 c273 -351 576 -739 673 -863 565 -722 957 -1277 1270 -1799 l132 -220 -16 -78 c-55 -278 -49 -536 19 -803 71 -278 229 -599 425 -859 160 -212 337 -383 590 -569 63 -47 121 -90 129 -96 19 -15 9 497 -13 639 -56 372 -185 715 -401 1070 -131 215 -250 367 -490 625 -134 144 -167 187 -253 325 -331 537 -738 1090 -1316 1790 -254 307 -1237 1475 -1241 1475 -3 0 219 -287 492 -637z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8851 15743 c263 -376 553 -830 966 -1516 395 -656 474 -784 713 -1147 185 -279 190 -288 250 -448 136 -362 267 -605 471 -873 149 -196 359 -398 558 -537 140 -98 365 -232 370 -221 7 23 -21 282 -45 399 -76 381 -269 743 -539 1014 -195 197 -408 323 -668 395 l-102 28 -68 94 c-134 186 -501 744 -812 1234 -342 538 -430 672 -624 950 -198 284 -516 715 -528 715 -2 0 24 -39 58 -87z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13051 15778 c-1 -9 37 -445 84 -970 118 -1336 128 -1464 146 -1978 11 -302 8 -642 -8 -985 l-6 -140 -67 -70 c-91 -96 -149 -167 -207 -255 -294 -441 -391 -1126 -243 -1719 31 -123 140 -441 151 -441 14 0 246 357 296 455 197 384 277 740 277 1235 0 269 -5 322 -62 660 -27 162 -28 169 -19 405 14 390 -9 966 -64 1545 -44 475 -273 2333 -278 2258z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6072 15720 c242 -349 1287 -1878 1435 -2100 437 -655 745 -1174 998 -1680 l88 -175 -32 -125 c-50 -199 -64 -328 -58 -530 3 -100 12 -216 22 -270 60 -331 211 -701 408 -998 107 -162 185 -259 322 -401 106 -110 394 -365 402 -357 12 12 34 327 35 496 1 438 -79 789 -278 1225 -144 314 -301 555 -588 900 -83 99 -133 171 -173 245 -396 746 -750 1298 -1422 2219 -288 394 -1171 1584 -1189 1601 -8 8 5 -14 30 -50z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M685 15229 c495 -270 893 -508 1810 -1081 516 -322 845 -519 1152 -690 209 -116 229 -130 368 -253 263 -232 445 -363 690 -498 330 -180 649 -291 982 -342 74 -11 436 -45 479 -45 11 0 -187 282 -252 360 -346 413 -832 693 -1326 766 -140 20 -397 15 -539 -11 l-96 -18 -109 58 c-366 196 -626 344 -1264 720 -601 354 -909 531 -1225 703 -234 126 -777 402 -792 402 -5 0 51 -32 122 -71z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7652 14700 c131 -213 1285 -2123 1395 -2310 481 -817 815 -1467 1095 -2134 l25 -60 -43 -131 c-177 -540 -135 -1077 131 -1693 123 -285 285 -537 501 -782 103 -117 351 -367 357 -360 5 6 52 298 69 430 7 52 12 199 12 325 0 244 -14 381 -59 597 -12 62 -22 114 -21 115 1 2 45 -77 98 -175 53 -97 138 -251 190 -342 l93 -165 -12 -65 c-37 -205 -40 -477 -8 -704 14 -103 50 -284 56 -291 12 -11 1057 25 1243 43 l69 7 -68 100 c-90 133 -128 179 -261 315 l-112 115 -51 128 c-28 70 -58 141 -67 158 -8 17 -14 32 -12 34 2 2 50 -40 108 -92 108 -98 292 -239 463 -356 74 -51 97 -63 97 -50 1 40 22 -22 95 -281 l16 -59 81 6 c45 4 82 8 84 10 6 6 -147 490 -222 700 -42 117 -104 299 -139 404 -40 120 -90 248 -135 340 -40 82 -114 243 -165 358 -51 116 -125 279 -164 364 -39 85 -70 156 -68 157 1 2 64 -37 140 -87 75 -49 140 -89 143 -89 8 0 -3 224 -17 340 -55 459 -276 914 -601 1239 -145 145 -298 251 -468 325 -36 16 -70 33 -77 40 -6 6 -145 272 -309 591 -272 531 -341 660 -301 565 14 -35 277 -598 440 -945 47 -99 84 -181 83 -182 -1 -1 -37 8 -80 21 l-77 22 -146 220 c-193 292 -382 591 -663 1049 -462 755 -684 1101 -960 1495 -130 185 -339 470 -345 470 -3 0 78 -125 179 -277 312 -474 497 -777 936 -1538 363 -629 545 -932 777 -1293 95 -147 110 -177 163 -325 153 -430 295 -705 520 -1005 95 -128 302 -349 404 -432 30 -25 59 -56 65 -70 5 -14 46 -108 90 -209 90 -205 95 -197 -45 -78 -150 128 -341 232 -559 306 l-119 40 -86 138 c-48 76 -124 217 -169 313 -261 552 -689 1332 -1374 2510 -419 721 -654 1114 -599 1005 5 -11 245 -461 532 -1000 287 -539 543 -1018 567 -1065 69 -129 38 -85 -77 110 -189 320 -418 679 -644 1010 -134 196 -336 480 -342 480 -2 0 31 -53 73 -117 344 -529 630 -1013 1078 -1828 288 -523 416 -752 582 -1035 171 -293 393 -815 604 -1421 l33 -96 -51 -129 c-28 -71 -56 -147 -63 -169 -7 -22 -15 -43 -19 -47 -9 -9 -155 250 -796 1407 -214 387 -386 684 -634 1100 -46 77 -148 265 -227 418 -276 533 -566 1025 -1014 1722 -362 562 -1204 1842 -1223 1860 -6 6 -4 -1 5 -15z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13791 14389 c0 -26 12 -426 29 -890 39 -1095 50 -1503 50 -1834 0 -497 -27 -1027 -74 -1450 l-24 -210 -144 -145 c-170 -172 -252 -284 -348 -475 -227 -453 -303 -1072 -195 -1599 25 -123 107 -426 115 -425 3 0 55 63 115 140 380 481 549 888 621 1494 23 196 21 505 -6 760 -28 259 -28 268 -7 490 31 321 38 463 44 905 9 645 -21 1267 -128 2700 -37 503 -46 599 -48 539z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1720 13907 c0 -3 60 -38 133 -78 401 -221 998 -579 1512 -907 1045 -668 1334 -847 1777 -1097 133 -75 174 -105 270 -193 334 -308 608 -504 946 -676 287 -145 576 -242 886 -296 114 -19 525 -64 532 -58 5 6 -153 252 -228 353 -93 127 -315 349 -441 444 -333 248 -692 405 -1047 457 -142 20 -412 14 -567 -14 l-102 -18 -118 64 c-358 195 -823 468 -1747 1026 -353 213 -723 427 -1041 601 -186 103 -765 399 -765 392z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9240 13560 c6 -11 13 -20 16 -20 2 0 0 9 -6 20 -6 11 -13 20 -16 20 -2 0 0 -9 6 -20z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14477 12810 c-4 -157 -12 -575 -17 -930 -29 -1878 -76 -2544 -252 -3548 l-11 -63 -101 -83 c-251 -207 -427 -434 -566 -729 -54 -116 -140 -356 -140 -393 0 -22 3 -24 38 -19 20 3 125 14 232 25 193 21 551 65 601 76 23 4 28 12 38 62 38 200 45 306 46 722 1 401 2 420 28 580 70 431 115 915 137 1490 14 375 12 1327 -5 2210 -19 958 -18 946 -28 600z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2905 12469 c605 -344 1083 -640 1940 -1204 860 -565 1072 -701 1510 -961 160 -95 311 -190 337 -211 25 -21 115 -103 200 -182 594 -559 1252 -900 1948 -1010 133 -21 481 -63 486 -58 6 6 -181 307 -250 400 -232 317 -528 568 -896 760 -440 229 -859 300 -1314 221 l-89 -15 -111 62 c-386 216 -773 450 -1619 976 -932 580 -1313 802 -1974 1147 -251 131 -324 163 -168 75z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15040 11958 c0 -167 -3 -400 -7 -518 l-6 -215 176 -32 c1480 -272 2687 -709 3377 -1224 466 -348 697 -749 650 -1130 -90 -745 -1121 -1424 -2890 -1904 -979 -265 -2211 -456 -3485 -539 -546 -36 -738 -41 -1555 -41 -841 0 -1002 5 -1610 46 -2053 138 -3836 533 -5005 1109 -417 205 -681 385 -926 629 -195 196 -292 348 -356 558 -23 77 -26 106 -27 233 -1 112 3 161 18 214 57 213 172 395 375 596 97 96 276 242 381 311 14 9 23 19 20 21 -23 20 -812 518 -821 518 -43 0 -480 -400 -639 -585 -292 -340 -477 -697 -551 -1061 -31 -153 -37 -479 -15 -773 105 -1364 507 -2757 1197 -4151 126 -256 191 -370 313 -549 401 -595 982 -1189 1641 -1679 1007 -748 2248 -1287 3585 -1556 739 -149 1400 -218 2225 -232 1191 -21 2353 124 3380 421 1757 508 3244 1488 4229 2785 224 294 337 480 533 875 738 1489 1154 2953 1225 4312 14 266 5 411 -38 601 -163 729 -773 1414 -1784 2006 -201 117 -635 336 -862 435 -585 253 -1275 481 -1980 655 -260 64 -721 166 -752 166 -14 0 -16 -32 -16 -302z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3920 11100 c8 -6 168 -102 355 -213 581 -348 1083 -673 1795 -1162 714 -490 1499 -1005 1837 -1204 53 -31 132 -101 290 -254 293 -284 433 -401 678 -564 494 -330 969 -520 1510 -608 189 -30 419 -63 423 -60 6 5 -157 289 -225 393 -255 387 -602 697 -1033 920 -230 119 -445 194 -690 239 -135 24 -492 25 -647 0 l-113 -18 -172 102 c-404 239 -821 501 -1623 1019 -834 539 -1158 738 -1695 1042 -312 177 -763 417 -690 368z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4925 9673 c6 -5 80 -52 165 -103 635 -384 1203 -762 2150 -1435 737 -523 1149 -809 1405 -978 l100 -66 150 -14 c83 -8 151 -13 153 -12 2 2 -77 54 -175 116 -264 168 -912 597 -1478 979 -777 524 -1184 784 -1745 1112 -282 165 -746 422 -725 401z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5830 8246 c0 -3 9 -10 20 -16 11 -6 20 -8 20 -6 0 3 -9 10 -20 16 -11 6 -20 8 -20 6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5885 8213 c6 -5 100 -65 210 -134 233 -144 695 -450 933 -616 157 -110 170 -117 250 -135 47 -10 86 -17 88 -15 6 6 -460 306 -736 474 -319 194 -775 455 -745 426z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.50901718.svg\";\nexport { ForwardRef as ReactComponent };","//Actions will be written in beelow format\r\n\r\nexport const setCountry = (email) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type:\"setCountry\",\r\n            payload:email\r\n        });\r\n    } \r\n}\r\n\r\nexport const setName = (name) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type:\"setName\",\r\n            payload:name\r\n        });\r\n    } \r\n}\r\n\r\nexport const disableAnno = (name) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type:\"disableAnno\",\r\n            payload:name\r\n        });\r\n    } \r\n}\r\n\r\nexport const disablePredict = (name) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type:\"disablePredict\",\r\n            payload:name\r\n        });\r\n    } \r\n}","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { ReactComponent as Logo } from \"../../logo.svg\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport * as React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { userActionCreator } from \"../../reduxutils/actions.js\";\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const setCountry = bindActionCreators(userActionCreator.setCountry, dispatch);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const setName = bindActionCreators(userActionCreator.setName, dispatch);\r\n  const disableAnno = bindActionCreators(\r\n    userActionCreator.disableAnno,\r\n    dispatch\r\n  );\r\n  const disablePredict = bindActionCreators(\r\n    userActionCreator.disablePredict,\r\n    dispatch\r\n  );\r\n  const name = useSelector((state) => state.userInfo.name);\r\n  const handleNameChange = (e) => {\r\n    let val = e.target.value;\r\n    setName(val);\r\n    if (val == \"Government Representive\") {\r\n      disablePredict(false);\r\n      disableAnno(true);\r\n    } else {\r\n      disablePredict(true);\r\n      disableAnno(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <AppBar\r\n        style={{ background: \"#ADD8E6\" }}\r\n        position=\"fixed\"\r\n        sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n      >\r\n        <Toolbar color=\"white\">\r\n          <Typography variant=\"h6\" noWrap component=\"div\">\r\n            <Logo height=\"50px\" width=\"50px\" />\r\n          </Typography>\r\n          <Typography fontWeight=\"Bold\" color=\"Black\" marginLeft={\"10px\"}>\r\n            Food Security DashBoard\r\n          </Typography>\r\n          &nbsp;\r\n          <div className=\"row\" style={{marginLeft: \"auto\"}}>\r\n            <div className=\"col\">\r\n              <select\r\n                name=\"Country\"\r\n                id=\"country-select\"\r\n                onChange={(e) => setCountry(e.target.value)}\r\n                value={country}\r\n              >\r\n                <option value=\"India\">INDIA</option>\r\n                <option value=\"USA\">USA</option>\r\n                <option value=\"China\">CHINA</option>\r\n                <option value=\"Ecuador\">ECUADOR</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col\">\r\n              <select\r\n                name=\"User\"\r\n                id=\"user-select\"\r\n                onChange={handleNameChange}\r\n                value={name}\r\n              >\r\n                <option value=\"Government Representive\">\r\n                  Government Representive\r\n                </option>\r\n                <option value=\"Researcher\">Researcher</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","var _g, _path, _path2, _path3, _path4;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSwaLogoDark(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Southwest_Logo_1_\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"223px\",\n    height: \"34px\",\n    viewBox: \"0 0 223 34\",\n    enableBackground: \"new 0 0 223 34\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Type\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#304CB2\",\n    d: \"M59,27.005c-0.91,0.17-1.972,0.319-3.114,0.319c-3.192-0.004-3.895-1.102-3.894-3.168V11.995h-6.006    l-0.012,12.762c-0.005,5.66,3.167,8.254,9.623,8.261c3.132,0.002,6.045-0.576,9.464-1.449V11.995H59V27.005z M78.497,27.563    c-2.184-0.002-2.485-1.03-2.484-2.678l0.007-7.845l4.982,0.005v-5.05H76.02V5.986h-6.016v6.008l-3.035,0.001v5.037l3.035,0.003    l-0.007,8.238c-0.003,3.627,0.734,7.761,6.708,7.766c1.827,0.002,3.32-0.438,4.952-0.9l-0.598-5.002    C80.175,27.393,79.401,27.563,78.497,27.563z M15.444,16.317c-1.113-0.426-2.355-0.826-3.687-1.194    c-3.506-0.99-4.585-1.543-4.584-3.082c0.001-1.818,1.35-2.653,4.494-2.65c2.583,0.002,4.878,0.67,7.212,1.547l1.262-5.891    c-2.69-1.002-5.245-1.895-8.344-1.897C4.561,3.144,0.57,7.255,0.565,12.188c-0.003,3.654,1.648,6.136,5.21,7.576    c1.046,0.422,2.252,0.84,3.588,1.233c3.928,1.206,5.072,1.771,5.071,3.282c-0.001,1.832-1.498,2.808-4.576,2.805    c-2.829-0.003-5.43-0.781-8.15-2.032l-1.259,5.943c2.969,1.172,5.926,2.041,9.483,2.044c7.362,0.007,11.181-4.115,11.185-9.063    C21.121,19.93,18.839,17.616,15.444,16.317z M94.227,10.954c-1.972-0.002-3.856,0.456-5.193,0.92V1.975h-6.007v31.013h5.988    l0.013-15.546c1.083-0.415,2.333-0.825,3.811-0.824c2.339,0.002,3.185,0.899,3.183,3.084l-0.011,13.286H102l0.011-13.939    C102.016,13.57,99.542,10.958,94.227,10.954z M33.419,10.855c-6.074-0.005-10.977,4.26-10.983,11    c-0.006,6.742,4.873,11.179,10.963,11.184c6.086,0.006,10.973-4.407,10.979-11.163S39.488,10.861,33.419,10.855z M33.404,27.139    c-2.611-0.002-4.702-1.878-4.699-5.275s2.029-5.188,4.708-5.186c2.675,0.002,4.658,1.771,4.655,5.192    C38.066,25.296,36.013,27.143,33.404,27.139z M168.117,20.206c-0.855-0.297-1.816-0.604-2.863-0.906    c-2.104-0.554-2.92-0.907-2.919-1.774c0.001-0.915,0.815-1.524,2.665-1.523c1.986,0.002,3.816,0.411,5.777,0.979l0.955-5.188    c-2.162-0.473-4.303-0.889-6.729-0.892c-5.688-0.005-8.75,2.906-8.754,6.876c-0.002,2.82,1.367,4.602,4.203,5.801    c0.801,0.341,1.743,0.686,2.812,1.021c2.217,0.64,3.297,0.9,3.297,1.901c-0.002,0.953-1.314,1.386-3.074,1.384    c-2.166-0.002-4.188-0.355-6.275-1.178l-0.934,5.154c2.584,0.736,5.008,1.22,7.697,1.222c5.981,0.006,8.664-3.128,8.668-6.995    C172.646,23.441,171.505,21.396,168.117,20.206z M145.557,10.879c-6.348-0.006-10.752,4.418-10.758,11.387    c-0.005,6.502,3.922,10.791,10.863,10.797c3.102,0.002,5.631-0.867,8.232-1.974l-0.902-4.967c-1.96,0.882-3.987,1.569-6.354,1.567    c-3.578-0.004-5.052-1.541-5.283-3.713l13.483,0.012c0,0,0.195-2.446,0.195-2.922C155.041,15.407,151.904,10.884,145.557,10.879z     M141.441,19.967c0.383-1.842,1.342-4.124,3.865-4.122c2.6,0.003,3.383,2.64,3.45,4.128L141.441,19.967z M184.49,27.563    c-2.184-0.002-2.473-1.03-2.471-2.678l0.008-7.797l5.039,0.005v-5.098h-5.041V5.986h-6.027v6.008l-3.063,0.001v5.085l3.063,0.003    l-0.008,8.19c-0.004,3.627,0.877,7.761,6.851,7.766c1.827,0.002,3.333-0.438,4.966-0.9l-0.742-5.002    C186.182,27.393,185.395,27.563,184.49,27.563z M188.49,3.219c-1.461-0.001-2.65,1.188-2.652,2.655s1.188,2.657,2.646,2.659    c1.469,0.001,2.658-1.188,2.66-2.655S189.957,3.221,188.49,3.219z M188.484,8.063c-1.23-0.001-2.148-0.892-2.148-2.188    c0.002-1.289,0.922-2.187,2.152-2.185c1.24,0.001,2.152,0.899,2.15,2.188C190.639,7.174,189.725,8.063,188.484,8.063z     M188.814,5.997c0.457-0.07,0.764-0.341,0.764-0.804c0-0.506-0.355-0.891-1.032-0.892L187.498,4.3l-0.002,3.084l0.57,0.001V6.067    c0.207,0.001,0.285,0.064,0.428,0.293l0.662,1.026h0.654l-0.633-0.955C189.035,6.218,188.93,6.083,188.814,5.997z M188.367,5.655    l-0.301-0.001l0.002-0.897l0.392,0.001c0.386,0,0.521,0.179,0.521,0.449C188.979,5.584,188.688,5.655,188.367,5.655z     M129.229,11.995l-3.754,11.548l-3.887-11.548h-5.238l-3.886,11.548l-3.755-11.548h-6.527l7.453,20.991h5.539L119,21.625    l3.766,11.361h5.539l7.452-20.991H129.229z\"\n  })))), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#CCCCCC\",\n    d: \"M206.955,10.784c-2.029,0-3.663,0.707-4.969,1.45c-1.307-0.743-2.938-1.45-4.968-1.45    c-4.057,0-6.736,2.65-6.736,7.178c0,5.524,5.275,10.921,11.704,15.254c6.43-4.334,11.704-9.729,11.704-15.254    C213.69,13.435,211.013,10.784,206.955,10.784z\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_1_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 190.9443,\n    y1: 10.52,\n    x2: 206.4014,\n    y2: 10.52,\n    gradientTransform: \"matrix(1 0 0 -1 0 35)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#3656CC\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.35,\n    style: {\n      stopColor: \"#304CB2\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.72,\n    style: {\n      stopColor: \"#283B80\"\n    }\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"url(#SVGID_1_)\",\n    d: \"M190.944,18.059c0,5.648,5.956,10.902,11.042,14.38c1.464-1.002,2.976-2.152,4.415-3.416    c-6.738-5.644-13.062-10.693-15.331-12.501C190.989,17.005,190.944,17.52,190.944,18.059z\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_2_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 193.1406,\n    y1: 22.7305,\n    x2: 210.602,\n    y2: 10.5039,\n    gradientTransform: \"matrix(1 0 0 -1 0 35)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.3,\n    style: {\n      stopColor: \"#E61C23\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.8,\n    style: {\n      stopColor: \"#C3161C\"\n    }\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"url(#SVGID_2_)\",\n    d: \"M212.577,20.679c-4.883-4.027-7.84-6.077-11.011-7.98c-0.854-0.516-2.569-1.27-4.492-1.27    c-1.842,0-3.389,0.573-4.455,1.69c-0.694,0.725-1.165,1.636-1.434,2.741c2.529,1.766,9.396,6.676,16.313,12.154    C209.808,25.815,211.743,23.314,212.577,20.679z\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_3_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 203.9639,\n    y1: 24.3096,\n    x2: 213.9473,\n    y2: 17.3191,\n    gradientTransform: \"matrix(1 0 0 -1 0 35)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#FDBC11\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.25,\n    style: {\n      stopColor: \"#FCB415\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.8,\n    style: {\n      stopColor: \"#F89E1C\"\n    }\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"url(#SVGID_3_)\",\n    d: \"M211.343,13.122c-1.05-1.094-2.589-1.683-4.36-1.683c-1.9,0-3.348,0.614-4.357,1.162    c1.894,1.054,6.009,3.439,10.272,6.579c0.066-0.424,0.103-0.85,0.103-1.278C213,15.913,212.419,14.247,211.343,13.122z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSwaLogoDark);\nexport default __webpack_public_path__ + \"static/media/swa_logo_dark.db0875f1.svg\";\nexport { ForwardRef as ReactComponent };","const backendServer = \"http://localhost:5000\";\r\n// const backendServer = \"http://18.144.165.108:5000\";\r\nexport default backendServer;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport backendServer from \"../../webConfig\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nconst marks = [\r\n  {\r\n    value: 2010,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 2020,\r\n    label: \"2020\",\r\n  },\r\n  {\r\n    value: 2021,\r\n    label: \"2021\",\r\n  },\r\n  {\r\n    value: 2021,\r\n    label: \"2022\",\r\n  },\r\n];\r\n\r\nfunction GdpGrowth(props) {\r\n  const disableAnno = useSelector((state)=>state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"gdpGrowth\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state)=>state.userInfo.country);\r\n  const [headerType, setHeaderType] = useState(\"GDP growth\");\r\n  const [type, setType] = useState(\"gdp\");\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const [value2, setValue2] = React.useState([0, 15]);\r\n  const minDistance = 15;\r\n\r\n  const years = [\r\n    {\r\n      value: 0,\r\n      label: \"1960\",\r\n    },\r\n    {\r\n      value: 15,\r\n      label: \"1970\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"1980\",\r\n    },\r\n    {\r\n      value: 45,\r\n      label: \"1990\",\r\n    },\r\n\r\n    {\r\n      value: 60,\r\n      label: \"2000\",\r\n    },\r\n\r\n    {\r\n      value: 75,\r\n      label: \"2010\",\r\n    },\r\n    {\r\n      value: 90,\r\n      label: \"2020\",\r\n    },\r\n  ];\r\n\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map(an=>{\r\n      return an;\r\n    } );\r\n    arr.push(val.value)\r\n    setAnnotations(arr);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/macro/getFileData/${startDate}/${endDate}/${headerType}/${type}/${country}`\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          if(country==\"Ecuador\"){\r\n            window.alert(\"No Macroeconomic available for Ecuador.\");\r\n          }\r\n          else{\r\n          let fv = [[\"Year\", \"GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      }\r\n      });\r\n  }, [startDate, endDate, headerType, type, country]);\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <div>\r\n          <select name=\"user\" id=\"user-select\">\r\n            <option value=\"Govt\">Government Representive</option>\r\n            <option value=\"Researcher\">Researcher</option>\r\n          </select>\r\n        </div> */}\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>GDP % Growth</label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (<ListItem>\r\n                    <ListItemIcon size=\"sm\">\r\n                      <Arrow />\r\n                    </ListItemIcon>\r\n                    <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                  </ListItem>);\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default GdpGrowth;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nfunction GdpCurrentUsd(props) {\r\n  const disableAnno = useSelector((state)=>state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"gdpCurrentUsd\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [annotations, setAnnotations] = useState([]);\r\n\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state)=>state.userInfo.country);\r\n  const [headerType, setHeaderType] = useState(\"GDP (current US$)\");\r\n  const [type, setType] = useState(\"GDP_Current_USD\");\r\n  const [value2, setValue2] = React.useState([0, 15]);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const minDistance = 15;\r\n  const years = [\r\n    {\r\n      value: 0,\r\n      label: \"1960\",\r\n    },\r\n    {\r\n      value: 15,\r\n      label: \"1970\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"1980\",\r\n    },\r\n    {\r\n      value: 45,\r\n      label: \"1990\",\r\n    },\r\n\r\n    {\r\n      value: 60,\r\n      label: \"2000\",\r\n    },\r\n\r\n    {\r\n      value: 75,\r\n      label: \"2010\",\r\n    },\r\n    {\r\n      value: 90,\r\n      label: \"2020\",\r\n    },\r\n  ];\r\n\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map(an=>{\r\n      return an;\r\n    } );\r\n    arr.push(val.value)\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/macro/getFileData/${startDate}/${endDate}/${headerType}/${type}/${country}`\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          if(country==\"Ecuador\"){\r\n            window.alert(\"No Macroeconomic available for Ecuador.\");\r\n          }\r\n          else{\r\n          let fv = [[\"Year\", \"GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      }\r\n      });\r\n\r\n  }, [startDate, endDate, headerType, type, country]);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>GDP Current USD</label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (<ListItem>\r\n                    <ListItemIcon size=\"sm\">\r\n                      <Arrow />\r\n                    </ListItemIcon>\r\n                    <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                  </ListItem>);\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default GdpCurrentUsd;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nfunction GdpCurrentAccountBalance(props) {\r\n  const [page, setPage] = useState(\"currentAccountBalance\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state)=>state.userInfo.country);\r\n  const [headerType, setHeaderType] = useState(\"CurrentAccountBalance\");\r\n  const [type, setType] = useState(\"CurrentAccountBalance\");\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = React.useState([0, 15]);\r\n  const disableAnno = useSelector((state)=>state.userInfo.disableAnno);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  const years = [\r\n    {\r\n      value: 0,\r\n      label: \"1960\",\r\n    },\r\n    {\r\n      value: 15,\r\n      label: \"1970\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"1980\",\r\n    },\r\n    {\r\n      value: 45,\r\n      label: \"1990\",\r\n    },\r\n\r\n    {\r\n      value: 60,\r\n      label: \"2000\",\r\n    },\r\n\r\n    {\r\n      value: 75,\r\n      label: \"2010\",\r\n    },\r\n    {\r\n      value: 90,\r\n      label: \"2020\",\r\n    },\r\n  ];\r\n\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map(an=>{\r\n      return an;\r\n    } );\r\n    arr.push(val.value)\r\n    setAnnotations(arr);\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/macro/getFileData/${startDate}/${endDate}/${headerType}/${type}/${country}`\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          if(country==\"Ecuador\"){\r\n            window.alert(\"No Macroeconomic available for Ecuador.\");\r\n          }\r\n          else{\r\n          let fv = [[\"Year\", \"GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      }\r\n      });\r\n  }, [startDate, endDate, headerType, type, country]);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                GDP Current Account Balance\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (<ListItem>\r\n                    <ListItemIcon size=\"sm\">\r\n                      <Arrow />\r\n                    </ListItemIcon>\r\n                    <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                  </ListItem>);\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default GdpCurrentAccountBalance;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nfunction FdiNet(props) {\r\n  const country = useSelector((state)=>state.userInfo.country);\r\n  const [page, setPage] = useState(\"fdiNet\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const [headerType, setHeaderType] = useState(\"Foreign direct investment\");\r\n  const [type, setType] = useState(\"ForeigDirectInvestmentNet\");\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = React.useState([0, 15]);\r\n  const disableAnno = useSelector((state)=>state.userInfo.disableAnno);\r\n  const minDistance = 15;\r\n  const years = [\r\n    {\r\n      value: 0,\r\n      label: \"1960\",\r\n    },\r\n    {\r\n      value: 15,\r\n      label: \"1970\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"1980\",\r\n    },\r\n    {\r\n      value: 45,\r\n      label: \"1990\",\r\n    },\r\n\r\n    {\r\n      value: 60,\r\n      label: \"2000\",\r\n    },\r\n\r\n    {\r\n      value: 75,\r\n      label: \"2010\",\r\n    },\r\n    {\r\n      value: 90,\r\n      label: \"2020\",\r\n    },\r\n  ];\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map(an=>{\r\n      return an;\r\n    } );\r\n    arr.push(val.value)\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/macro/getFileData/${startDate}/${endDate}/${headerType}/${type}/${country}`\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          if(country==\"Ecuador\"){\r\n            window.alert(\"No Macroeconomic available for Ecuador.\");\r\n          }\r\n          else{\r\n          let fv = [[\"Year\", \"GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      }\r\n      });\r\n  }, [startDate, endDate, headerType, type, country]);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>FDI Net</label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (<ListItem>\r\n                    <ListItemIcon size=\"sm\">\r\n                      <Arrow />\r\n                    </ListItemIcon>\r\n                    <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                  </ListItem>);\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default FdiNet;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nfunction FdiNetInflows(props) {\r\n  const [page, setPage] = useState(\"fdiNetInflows\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const disableAnno = useSelector((state)=>state.userInfo.disableAnno);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state)=>state.userInfo.country);\r\n  const [headerType, setHeaderType] = useState(\r\n    \"Foreign direct investment, net inflows\"\r\n  );\r\n  const [value2, setValue2] = React.useState([0, 15]);\r\n  const [type, setType] = useState(\"ForeigDirectInvestmentNetInflows\");\r\n  const [graphData, setGraphData] = useState([]);\r\n  const minDistance = 15;\r\n  const years = [\r\n    {\r\n      value: 0,\r\n      label: \"1960\",\r\n    },\r\n    {\r\n      value: 15,\r\n      label: \"1970\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"1980\",\r\n    },\r\n    {\r\n      value: 45,\r\n      label: \"1990\",\r\n    },\r\n\r\n    {\r\n      value: 60,\r\n      label: \"2000\",\r\n    },\r\n\r\n    {\r\n      value: 75,\r\n      label: \"2010\",\r\n    },\r\n    {\r\n      value: 90,\r\n      label: \"2020\",\r\n    },\r\n  ];\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map(an=>{\r\n      return an;\r\n    } );\r\n    arr.push(val.value)\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/macro/getFileData/${startDate}/${endDate}/${headerType}/${type}/${country}`\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          if(country==\"Ecuador\"){\r\n            window.alert(\"No Macroeconomic available for Ecuador.\");\r\n          }\r\n          else{\r\n          let fv = [[\"Year\", \"GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      }\r\n      });\r\n  }, [startDate, endDate, headerType, type, country]);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>FDI Inflows</label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (<ListItem>\r\n                    <ListItemIcon size=\"sm\">\r\n                      <Arrow />\r\n                    </ListItemIcon>\r\n                    <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                  </ListItem>);\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default FdiNetInflows;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nfunction FDINetOutflows(props) {\r\n  const disableAnno = useSelector((state)=>state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"fDINetOutflows\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state)=>state.userInfo.country);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const [headerType, setHeaderType] = useState(\r\n    \"Foreign direct investment, net outflows\"\r\n  );\r\n  const [type, setType] = useState(\"ForeignDirectInvestmentNetOutflows\");\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = React.useState([0, 15]);\r\n  const minDistance = 15;\r\n  const years = [\r\n    {\r\n      value: 0,\r\n      label: \"1960\",\r\n    },\r\n    {\r\n      value: 15,\r\n      label: \"1970\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"1980\",\r\n    },\r\n    {\r\n      value: 45,\r\n      label: \"1990\",\r\n    },\r\n\r\n    {\r\n      value: 60,\r\n      label: \"2000\",\r\n    },\r\n\r\n    {\r\n      value: 75,\r\n      label: \"2010\",\r\n    },\r\n    {\r\n      value: 90,\r\n      label: \"2020\",\r\n    },\r\n  ];\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map(an=>{\r\n      return an;\r\n    } );\r\n    arr.push(val.value)\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/macro/getFileData/${startDate}/${endDate}/${headerType}/${type}/${country}`\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          if(country==\"Ecuador\"){\r\n            window.alert(\"No Macroeconomic available for Ecuador.\");\r\n          }\r\n          else{\r\n          let fv = [[\"Year\", \"GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      }\r\n      });\r\n  }, [startDate, endDate, headerType, type, country]);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>FDI Outflows</label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (<ListItem>\r\n                    <ListItemIcon size=\"sm\">\r\n                      <Arrow />\r\n                    </ListItemIcon>\r\n                    <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                  </ListItem>);\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default FDINetOutflows;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nfunction FDINetOutflowsPercentGDP(props) {\r\n  const disableAnno = useSelector((state)=>state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"fDINetOutflowsPercentGDP\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state)=>state.userInfo.country);\r\n  const [headerType, setHeaderType] = useState(\r\n    \"Foreign_direct_investment_percent\"\r\n  );\r\n  const [value2, setValue2] = React.useState([0, 15]);\r\n  const [type, setType] = useState(\"FDINetOutflows\");\r\n  const [graphData, setGraphData] = useState([]);\r\n  const minDistance = 15;\r\n  const years = [\r\n    {\r\n      value: 0,\r\n      label: \"1960\",\r\n    },\r\n    {\r\n      value: 15,\r\n      label: \"1970\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"1980\",\r\n    },\r\n    {\r\n      value: 45,\r\n      label: \"1990\",\r\n    },\r\n\r\n    {\r\n      value: 60,\r\n      label: \"2000\",\r\n    },\r\n\r\n    {\r\n      value: 75,\r\n      label: \"2010\",\r\n    },\r\n    {\r\n      value: 90,\r\n      label: \"2020\",\r\n    },\r\n  ];\r\n\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map(an=>{\r\n      return an;\r\n    } );\r\n    arr.push(val.value)\r\n    setAnnotations(arr);\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/macro/getFileData/${startDate}/${endDate}/${headerType}/${type}/${country}`\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          if(country==\"Ecuador\"){\r\n            window.alert(\"No Macroeconomic available for Ecuador.\");\r\n          }\r\n          else{\r\n          let fv = [[\"Year\", \"GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      }\r\n      });\r\n  }, [startDate, endDate, headerType, type, country]);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"atuo\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                GDP Outfows (%GDP)\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (<ListItem>\r\n                    <ListItemIcon size=\"sm\">\r\n                      <Arrow />\r\n                    </ListItemIcon>\r\n                    <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                  </ListItem>);\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default FDINetOutflowsPercentGDP;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\nfunction valuetext(value) {\r\n  return `${value}`;\r\n}\r\n\r\nfunction Manufacturing(props) {\r\n  const [page, setPage] = useState(\"manufacturing\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(1960);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/agri/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/manufacturing\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"manufacturing GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <select name=\"user\" id=\"user-select\">\r\n          <option value=\"Govt\">Government Representive</option>\r\n          <option value=\"Researcher\">Researcher</option>\r\n        </select>\r\n      </div> */}\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Manufacturing(%GDP)\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default Manufacturing;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\n\r\nfunction AnnualGrowth(props) {\r\n  const dispatch = useDispatch();\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const name = useSelector((state) => state.userInfo.name);\r\n  const [page, setPage] = useState(\"annualgrowth\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(1980);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  //const [country, setCountry] = useState(\"India\");\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/agri/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/annualgrowth\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"manufacturing GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <div>\r\n          <select name=\"user\" id=\"user-select\">\r\n            <option value=\"Govt\">Government Representive</option>\r\n            <option value=\"Researcher\">Researcher</option>\r\n          </select>\r\n        </div>\r\n      </div> */}\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annual % Growth</label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default AnnualGrowth;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\n\r\nfunction FertilizerProd(props) {\r\n  const [page, setPage] = useState(\"fertilizer_prod\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(1980);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/agri/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/fertilizer_prod\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"manufacturing GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <select name=\"user\" id=\"user-select\">\r\n          <option value=\"Govt\">Government Representive</option>\r\n          <option value=\"Researcher\">Researcher</option>\r\n        </select>\r\n      </div> */}\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                % of Fertilizer Production\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default FertilizerProd;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\n\r\nfunction FertilizerCons(props) {\r\n  const [page, setPage] = useState(\"annualgrowth\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(1980);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/agri/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/fertilizer_cons\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"manufacturing GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <div>\r\n          <select name=\"user\" id=\"user-select\">\r\n            <option value=\"Govt\">Government Representive</option>\r\n            <option value=\"Researcher\">Researcher</option>\r\n          </select>\r\n        </div>\r\n      </div> */}\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Fertilizer Consumption (kg per hectare per arable land)\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default FertilizerCons;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\nfunction ImportReserves(props) {\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"importReserves\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/debt/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/importReserves\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"Import Reserves\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Total reserves in months of imports\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default ImportReserves;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\nfunction GoldReserves(props) {\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"goldReserves\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/debt/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/goldReserves\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"Gold Reserves\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Total reserves (includes gold, current US$)\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default GoldReserves;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport backendServer from \"../../webConfig\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\nfunction TotalReserves(props) {\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"totalReserves\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/debt/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/totalReserves\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"Total Reserves\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <select name=\"user\" id=\"user-select\">\r\n          <option value=\"Govt\">Government Representive</option>\r\n          <option value=\"Researcher\">Researcher</option>\r\n        </select>\r\n      </div> */}\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Total reserves (% of total external debt)\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default TotalReserves;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\nfunction DebtServices(props) {\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"debtServices\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/debt/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/debtServices\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"Debt Services\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Debt service (PPG and IMF only, % of exports of goods, services\r\n                and primary income)\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default DebtServices;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\nfunction TotalDebt(props) {\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"totalDebt\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/debt/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/totalDebt\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"Total Debt\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <select name=\"user\" id=\"user-select\">\r\n          <option value=\"Govt\">Government Representive</option>\r\n          <option value=\"Researcher\">Researcher</option>\r\n        </select>\r\n      </div> */}\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"atuo\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Total debt service (% of GNI)\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default TotalDebt;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\nfunction CurrentGni(props) {\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"currentGni\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(2012);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/debt/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/currentGni\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"Current GNI\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>GNI (current US$)</label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default CurrentGni;\r\n","import { useJsApiLoader, GoogleMap, Marker } from '@react-google-maps/api';\r\n\r\nfunction Bananas(props) {\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyAwi3t_ncM6Ai8ZthQQsgoimwcBUx3wPo4\"\r\n  })\r\n\r\n  const centerChina = { lat: 26.282581, lng: 107.896686 }\r\n  const guandong = { lat: 24.043248, lng: 114.740903 }\r\n  const guangxi = { lat: 24.062199, lng: 110.517365 }\r\n  const yunnan = { lat: 24.545885, lng: 101.519394 }\r\n  const hainan = { lat: 19.339891, lng: 109.755478 }\r\n\r\n  const centerIndonesia = { lat: -6.419890, lng: 108.117360 }\r\n  const lampung = { lat: -4.810370, lng: 105.250977 }\r\n  const eastJava = { lat: -7.428161, lng: 112.114438 }\r\n  const westJava = { lat: -6.997026, lng: 107.713104 }\r\n\r\n  if (!isLoaded) {\r\n    return (\r\n      <div>Loading...</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div style={{ flex: 1 }}>\r\n        <GoogleMap center={centerChina} zoom={4} mapContainerStyle={{ width: \"400px\", height: \"400px\" }}>\r\n          <Marker position={guandong} />\r\n          <Marker position={guangxi} />\r\n          <Marker position={yunnan} />\r\n          <Marker position={hainan} />\r\n        </GoogleMap>\r\n        <span style={{ marginTop: \"5px\" }}><b>China</b></span>\r\n      </div>\r\n      <div style={{ marginLeft: \"20px\" }}>\r\n        <GoogleMap center={centerIndonesia} zoom={4} mapContainerStyle={{ width: \"400px\", height: \"400px\" }}>\r\n          <Marker position={lampung} />\r\n          <Marker position={eastJava} />\r\n          <Marker position={westJava} />\r\n        </GoogleMap>\r\n        <span style={{ marginTop: \"5px\" }}><b>Indonesia</b></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bananas;\r\n","import { useJsApiLoader, GoogleMap, Marker } from '@react-google-maps/api';\r\n\r\nfunction Mangoes(props) {\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyAwi3t_ncM6Ai8ZthQQsgoimwcBUx3wPo4\"\r\n  })\r\n\r\n  const centerPhilippines = { lat: 11.332799, lng: 123.056932 }\r\n  const pangasinan = { lat: 15.980713, lng: 120.407195 }\r\n  const visayas = { lat: 10.312807, lng: 123.260525 }\r\n  const davao = { lat: 7.318711, lng: 125.434308 }\r\n  const mindanao = { lat: 8.424077, lng: 123.268533 }\r\n\r\n  const centerIndia = { lat: 15.918457, lng: 80.044207 }\r\n  const visakhapatnam = { lat: 17.657618, lng: 83.017234 }\r\n  const tirupati = { lat: 13.691804, lng: 79.616670 }\r\n\r\n  if (!isLoaded) {\r\n    return (\r\n      <div>Loading...</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div style={{ flex: 1 }}>\r\n        <GoogleMap center={centerPhilippines} zoom={5} mapContainerStyle={{ width: \"400px\", height: \"400px\" }}>\r\n          <Marker position={pangasinan} />\r\n          <Marker position={visayas} />\r\n          <Marker position={davao} />\r\n          <Marker position={mindanao} />\r\n        </GoogleMap>\r\n        <span style={{ marginTop: \"5px\" }}><b>Philippines</b></span>\r\n      </div>\r\n      <div style={{ marginLeft: \"20px\" }}>\r\n        <GoogleMap center={centerIndia} zoom={5} mapContainerStyle={{ width: \"400px\", height: \"400px\" }}>\r\n          <Marker position={visakhapatnam} />\r\n          <Marker position={tirupati} />\r\n        </GoogleMap>\r\n        <span style={{ marginTop: \"5px\" }}><b>India</b></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mangoes;\r\n","import { useJsApiLoader, GoogleMap, Marker } from '@react-google-maps/api';\r\n\r\nfunction Walnuts(props) {\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyAwi3t_ncM6Ai8ZthQQsgoimwcBUx3wPo4\"\r\n  })\r\n\r\n  const centerCalifornia = { lat: 37.503960, lng: -121.008422 }\r\n  const sanJoaquin = { lat: 36.589079, lng: -120.211004 }\r\n  const SacramentoValley = { lat: 38.317185, lng: -121.635339 }\r\n\r\n  const centerIran = { lat: 33.724472, lng: 50.631158 }\r\n  const kerman = { lat: 30.279217, lgn: 57.060681 }\r\n  const kermanshah = { lat: 34.338472, lng: 47.100624 }\r\n  const hamedan = { lat: 34.793002, lng: 48.514117 }\r\n  const lorestan = { lat: 33.490891, lng: 48.629127 }\r\n  const kohgilouyehBoyerahmad = { lat: 30.895319, lng: 50.823964 }\r\n  const khorasanRazavi = { lat: 35.899537, lng: 58.983190 }\r\n  const bakhtiari = { lat: 34.000000, lng: 50.000000 }\r\n  const easternAzerbaijan = { lat: 38.108368, lng: 46.606365 }\r\n  const westernAzerbaijan = { lat: 37.000000, lng: 45.000000 }\r\n  const markazi = { lat: 35.000000, lng: 50.000000 }\r\n\r\n  if (!isLoaded) {\r\n    return (\r\n      <div>Loading...</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div style={{ flex: 1 }}>\r\n        <GoogleMap center={centerCalifornia} zoom={5} mapContainerStyle={{ width: \"400px\", height: \"400px\" }}>\r\n          <Marker position={sanJoaquin} />\r\n          <Marker position={SacramentoValley} />\r\n        </GoogleMap>\r\n        <span style={{ marginTop: \"5px\" }}><b>California</b></span>\r\n      </div>\r\n      <div style={{ marginLeft: \"20px\" }}>\r\n        <GoogleMap center={centerIran} zoom={5} mapContainerStyle={{ width: \"400px\", height: \"400px\" }}>\r\n          <Marker position={kerman} />\r\n          <Marker position={kermanshah} />\r\n          <Marker position={hamedan} />\r\n          <Marker position={lorestan} />\r\n          <Marker position={kohgilouyehBoyerahmad} />\r\n          <Marker position={khorasanRazavi} />\r\n          <Marker position={bakhtiari} />\r\n          <Marker position={easternAzerbaijan} />\r\n          <Marker position={westernAzerbaijan} />\r\n          <Marker position={markazi} />\r\n        </GoogleMap>\r\n        <span style={{ marginTop: \"5px\" }}><b>Iran</b></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Walnuts;\r\n","import {useState, useEffect} from 'react';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport backendServer from \"../../webConfig\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from 'axios';\r\n\r\nfunction Import(props) {\r\n    const[commodity,setCommodity] = useState('Wheat');\r\n    const[year,setYear] = useState(2001);\r\n    const[prevYear,setPrevYear] = useState(2001);\r\n    const[startDate,setStartDate] = useState(1980);\r\n    const[endDate,setEndDate] = useState(2020);\r\n    const[country,setCountry] = useState('Egypt');\r\n    const[graphData, setGraphData] = useState([]);\r\n    const[graphDataSankey, setGraphDataSankey] = useState([]);\r\n    const[yearList, setYearList] = useState([]);\r\n    useEffect(()=> {\r\n        let firstyear=1986;\r\n        let lastyear=2022;\r\n        let yl=[];\r\n        for(let i=firstyear;i<=lastyear;i++) {\r\n            yl.push(i);\r\n        }\r\n        setYearList(yl)\r\n        axios.get(backendServer+'/import/pie/getFileData/'+country+'/'+year+'/'+commodity).then(res => {\r\n            if(res.status==200) {\r\n                let recs = res.data; \r\n                let fv = [['Country','Quantity(tonnes)']];   \r\n                if(recs.length>0) {\r\n                    \r\n                    for(let i=0;i<recs.length;i++) {\r\n                        \r\n                        fv.push(recs[i]);\r\n                    }\r\n                    // }\r\n                    setGraphData(fv)\r\n                    let fvs= [['Country','Partner Countries','Quantity(tonnes)']];\r\n                    for(let i=0;i<recs.length;i++) {\r\n                        let recAr = [country].concat(recs[i]);\r\n\r\n                        fvs.push(recAr);\r\n                    }\r\n                    console.log('year arr',fvs);\r\n                    setGraphDataSankey(fvs)\r\n                }  else {\r\n                    setYear(prevYear);\r\n                    alert('No data for this year')\r\n                }    \r\n            }\r\n        })\r\n    },[startDate,endDate,country,year,commodity])\r\n\r\n    const selectYearHandle = (e) => {\r\n        setPrevYear(year);\r\n        setYear(e);\r\n    }\r\n    return (\r\n        <>\r\n          <div className='row'>\r\n            <div className='col'>\r\n                <DropdownButton title={country} onSelect={(e)=>setCountry(e)}>\r\n                    <Dropdown.Item eventKey=\"Egypt\">Egypt</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Saudi Arabia\">Saudi Arabia</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n            <div className='col'>\r\n                <DropdownButton title={year} onSelect={(e)=>selectYearHandle(e)}>\r\n                    {yearList.map(yr=> {\r\n                        return <Dropdown.Item eventKey={yr}>{yr}</Dropdown.Item>\r\n                    })}\r\n                </DropdownButton>\r\n            </div>\r\n            <div className='col'>\r\n                <DropdownButton title={commodity} onSelect={(e)=>setCommodity(e)}>\r\n                    <Dropdown.Item eventKey=\"Wheat\">Wheat</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Rice\">Rice</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n          </div>\r\n          &nbsp;\r\n          <div className='row'>\r\n              <div className='col'>\r\n              <Chart\r\n                                chartType=\"PieChart\"\r\n                                data={graphData}\r\n                                width=\"100%\"\r\n                                height=\"400px\"\r\n                                legendToggle\r\n                            />\r\n              </div>\r\n              <div className='col'>\r\n              <Chart\r\n                                    chartType=\"Sankey\"\r\n                                    data={graphDataSankey}\r\n                                    width=\"100%\"\r\n                                    height=\"400px\"\r\n                                    legendToggle\r\n                                />\r\n              </div>\r\n          </div>\r\n        </>\r\n      );\r\n}\r\nexport default Import;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\n\r\nfunction Credit(props) {\r\n  const [page, setPage] = useState(\"annualgrowth\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(1980);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/agri/getFileData/` +\r\n          startDate +\r\n          \"/\" +\r\n          endDate +\r\n          \"/fertilizer_cons\" +\r\n          \"/\" +\r\n          country\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"manufacturing GDP\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          <select name=\"user\" id=\"user-select\">\r\n            <option value=\"Govt\">Government Representive</option>\r\n            <option value=\"Researcher\">Researcher</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Credit\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n            <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default Credit;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\nfunction WalnutsIran(props) {\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"walnutsiran\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(1960);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/yield/getFileData/` +\r\n          startDate +\r\n          \"/\"\r\n          +endDate+\r\n          \"/iran\"\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n\r\n          let fv = [[\"Year\", \"Area harvested (hectare)\", \"Production (tonnes)\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Yield Service (Walnuts - Iran)\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\" 120%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n           \r\n          </Row>\r\n        </Card.Body>\r\n        <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default WalnutsIran;\r\n","import { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Arrow from \"@mui/icons-material/NoteAltOutlined\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport axios from \"axios\";\r\nimport backendServer from \"../../webConfig\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst years = [\r\n  {\r\n    value: 0,\r\n    label: \"1960\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"1970\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1980\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"1990\",\r\n  },\r\n\r\n  {\r\n    value: 60,\r\n    label: \"2000\",\r\n  },\r\n\r\n  {\r\n    value: 75,\r\n    label: \"2010\",\r\n  },\r\n  {\r\n    value: 90,\r\n    label: \"2020\",\r\n  },\r\n];\r\nfunction MangoesPhilippines(props) {\r\n  const disableAnno = useSelector((state) => state.userInfo.disableAnno);\r\n  const [page, setPage] = useState(\"mangoesphilippines\");\r\n  const [year, setYear] = useState([]);\r\n  const [val, setVal] = useState([]);\r\n  const [startDate, setStartDate] = useState(1960);\r\n  const [endDate, setEndDate] = useState(2020);\r\n  const country = useSelector((state) => state.userInfo.country);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [value2, setValue2] = useState([0, 15]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  const minDistance = 15;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendServer}/yield/getFileData/` +\r\n          startDate +\r\n          \"/\"\r\n          +endDate+\r\n          \"/philippines\"\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          let recs = res.data;\r\n          let yearArr = [];\r\n          let valArr = [];\r\n          // for(let i=0;i<recs.length;i++) {\r\n          //     let rec = recs[i];\r\n          //     yearArr.push(parseInt(rec.Year));\r\n          //     let v = rec.val==null || isNaN(rec.val)?0:rec.val;\r\n          //     valArr.push(parseFloat(v));\r\n          // }\r\n          // setYear(yearArr);\r\n          // setVal(valArr);\r\n\r\n          let fv = [[\"Year\", \"Area harvested (hectare)\", \"Production (tonnes)\"]];\r\n          for (let i = 0; i < recs.length; i++) {\r\n            fv.push(recs[i]);\r\n          }\r\n          // }\r\n          console.log(\"year arr\", fv);\r\n          setGraphData(fv);\r\n        }\r\n      });\r\n  }, [startDate, endDate, country]);\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n  const addAnnotations = (e) => {\r\n    let val = document.getElementById(\"outlined-textarea\");\r\n    let arr = annotations.map((an) => {\r\n      return an;\r\n    });\r\n    arr.push(val.value);\r\n    setAnnotations(arr);\r\n  };\r\n  const options = {\r\n    hAxis: {\r\n      format: \"\",\r\n    },\r\n  };\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (newValue[1] - newValue[0] < minDistance) {\r\n      if (activeThumb === 0) {\r\n        const clamped = Math.min(newValue[0], 100 - minDistance);\r\n        setValue2([clamped, clamped + minDistance]);\r\n      } else {\r\n        const clamped = Math.max(newValue[1], minDistance);\r\n        setValue2([clamped - minDistance, clamped]);\r\n      }\r\n    } else {\r\n      setValue2(newValue);\r\n      setStartDate(years.find((p) => p.value === value2[0]).label);\r\n      setEndDate(years.find((p) => p.value === value2[1]).label);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/* <div>\r\n            <select name=\"user\" id=\"user-select\">\r\n              <option value=\"Govt\">Government Representive</option>\r\n              <option value=\"Researcher\">Researcher</option>\r\n            </select>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <label style={{ \"font-weight\": \"bold\" }}>Year</label>\r\n            <Slider\r\n              getAriaLabel={() => \"Minimum distance shift\"}\r\n              value={value2}\r\n              label={valuetext}\r\n              onChange={handleChange2}\r\n              valueLabelDisplay=\"auto\"\r\n              step=\"15\"\r\n              getAriaValueText={valuetext}\r\n              disableSwap\r\n              marks={years}\r\n            />\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      &nbsp;\r\n      <Card>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={8}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>\r\n                Yield Service (Mangoes - Philippines)\r\n              </label>\r\n              <Chart\r\n                chartType=\"LineChart\"\r\n                data={graphData}\r\n                width=\" 120%\"\r\n                height=\"400px\"\r\n                legendToggle\r\n                options={options}\r\n              />\r\n            </Col>\r\n           \r\n          </Row>\r\n        </Card.Body>\r\n        <Col md={4} hidden={disableAnno}>\r\n              <label style={{ \"font-weight\": \"bold\" }}>Annotations</label>\r\n              <List>\r\n                {annotations.map((p) => {\r\n                  return (\r\n                    <ListItem>\r\n                      <ListItemIcon size=\"sm\">\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText fontSize=\"12\" primary={p} secondary={\"\"} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Annotation\"\r\n                placeholder=\"Annotation\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button variant=\"contained\" onClick={addAnnotations}>\r\n                + Add Annotation\r\n              </Button>\r\n            </Col>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default MangoesPhilippines;\r\n","import * as React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport { ReactComponent as Logo } from \"../../../swa_logo_dark.svg\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Arrow from \"@mui/icons-material/ChevronRightSharp\";\r\nimport Gdp from \"../../Macroeconomic/gdpPage.js\";\r\nimport GdpCurrentUsd from \"../../Macroeconomic/GdpCurrentUsd.js\";\r\nimport GdpCurrentAccoutnBalance from \"../../Macroeconomic/GdpCurrentAccoutnBalance.js\";\r\nimport FDINet from \"../../Macroeconomic/FDINet.js\";\r\nimport FDINetInflows from \"../../Macroeconomic/FDINetInflows.js\";\r\nimport FDINetOutflows from \"../../Macroeconomic/FDINetOutflows.js\";\r\nimport FDINetOutflowsPercentGDP from \"../../Macroeconomic/FDINetOutflowsPercentGDP.js\";\r\nimport Header from \"../../Header/header\";\r\nimport Manufacturing from \"../../Agriculture/Manufacturing\";\r\nimport AnnualGrowth from \"../../Agriculture/AnnualGrowth\";\r\nimport FertilizerProd from \"../../Agriculture/FertilizerProd\";\r\nimport FertilizerCons from \"../../Agriculture/FertilizerCons\";\r\nimport ImportReserves from \"../../Debt/ImportReserves\";\r\nimport GoldReserves from \"../../Debt/GoldReserves\";\r\nimport TotalReserves from \"../../Debt/TotalReserves\";\r\nimport DebtServices from \"../../Debt/DebtServices\";\r\nimport TotalDebt from \"../../Debt/TotalDebt\";\r\nimport CurrentGni from \"../../Debt/CurrentGni\";\r\nimport Bananas from \"../../Crops/Bananas\";\r\nimport Mangoes from \"../../Crops/Mangoes\";\r\nimport Walnuts from \"../../Crops/Walnuts\";\r\nimport Import from \"../../Import/Import\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Credit from \"../../Agriculture/Credit\";\r\nimport WalnutsIran from \"../../Yield/WalnutsIran\";\r\nimport MangoesPhilippines from \"../../Yield/MangoesPhilippines\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//import Profile from \"../../\";\r\nconst drawerWidth = 240;\r\n\r\nclass DashBoard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isExpanded: \"\",\r\n      page: \"gdp\",\r\n      // disablePredict : this.props.disablePredict\r\n    };\r\n    // this.disableAnno = this.disableAnno.bind(this);\r\n    //  const disableAnno =this.props.userInfo.disableAnno;\r\n\r\n  }\r\n  handleChange = (panel) => (event, isExpanded) => {\r\n    this.setState({ isExpanded: panel });\r\n  };\r\n  setPage = (page) => {\r\n    this.setState({ page: page, redirectFlag: false });\r\n  };\r\n\r\n  componentDidMount = () => { };\r\n\r\n  changeGraphType = (type) => {\r\n    this.setState({\r\n      page: type,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    /*let redirectVar = null;\r\n    if (this.state.redirectFlag) {\r\n      redirectVar = <Redirect to={{ pathname: \"/\" }} />;\r\n    }*/\r\n    return (\r\n      <div>\r\n        <Header></Header>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            [`& .MuiDrawer-paper`]: {\r\n              width: drawerWidth,\r\n              boxSizing: \"border-box\",\r\n            },\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <Box sx={{ overflow: \"auto\" }}>\r\n            <Accordion\r\n              expanded={this.state.isExpanded === \"panel1\"}\r\n              onChange={this.handleChange(\"panel1\")}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\"\r\n              >\r\n                <Typography sx={{ width: \"33%\", flexShrink: 0 }}>\r\n                  Macroeconomic\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <List>\r\n                  <>\r\n                    <ListItem\r\n                      button\r\n                      key=\"GDP\"\r\n                      onClick={() => this.changeGraphType(\"gdp\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText\r\n                        disableTypography\r\n                        primary=\"GDP Growth Rage\"\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      onClick={() => this.changeGraphType(\"gdpCurrentUsd\")}\r\n                      key=\"gdpCurrentUsd\"\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"GDP Current USD\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"Current Account Balance (% of GDP)\"\r\n                      onClick={() =>\r\n                        this.changeGraphType(\"currentAccountBalance\")\r\n                      }\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current Account Balance (% of GDP)\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"Foreign direct investment, net (BoP, current US$)\"\r\n                      onClick={() => this.changeGraphType(\"fdiNet\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Foreign direct investment, net (BoP, current US$)\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"Foreign direct investment, net outflows (BoP, current US$) \"\r\n                      onClick={() => this.changeGraphType(\"fDINetOutflows\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Foreign direct investment, net outflows (BoP, current US$) \" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"Foreign direct investment, net inflows (% of GDP) \"\r\n                      onClick={() => this.changeGraphType(\"fdiNetInflows\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Foreign direct investment, net inflows (% of GDP)\" />\r\n                    </ListItem>\r\n                  </>\r\n                </List>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion\r\n              expanded={this.state.isExpanded === \"panel2\"}\r\n              onChange={this.handleChange(\"panel2\")}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\"\r\n              >\r\n                <Typography sx={{ width: \"33%\", flexShrink: 0 }}>\r\n                  Agricultural\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <List>\r\n                  <>\r\n                    <ListItem\r\n                      button\r\n                      key=\"manufacturing\"\r\n                      onClick={() => this.changeGraphType(\"manufacturing\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Manufacturing(%GDP)\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"annualgrowth\"\r\n                      onClick={() => this.changeGraphType(\"annualgrowth\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Agriculture, forestry, and fishing, value added\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      onClick={() => this.changeGraphType(\"credit\")}\r\n                      key=\"Credit\"\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Credit\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"Fertilizers Production\"\r\n                      onClick={() => this.changeGraphType(\"fertilizer_prod\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Fertilizers Production\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"FDI Consumption\"\r\n                      onClick={() => this.changeGraphType(\"fertilizer_cons\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Fertilizers Consumption\" />\r\n                    </ListItem>{\" \"}\r\n                  </>\r\n                </List>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion\r\n              expanded={this.state.isExpanded === \"panel3\"}\r\n              onChange={this.handleChange(\"panel3\")}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\"\r\n              >\r\n                <Typography sx={{ width: \"33%\", flexShrink: 0 }}>\r\n                  Debt\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <List>\r\n                  <>\r\n                    <ListItemText primary=\"Debt Services\" />\r\n                    <ListItem\r\n                      button\r\n                      key=\"importReserves\"\r\n                      onClick={() => this.changeGraphType(\"importReserves\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Total reserves in months of imports\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      onClick={() => this.changeGraphType(\"goldReserves\")}\r\n                      key=\"goldReserves\"\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Total reserves (includes gold, current US$)\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"totalReserves\"\r\n                      onClick={() => this.changeGraphType(\"totalReserves\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Total reserves (% of total external debt)\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"debtServices\"\r\n                      onClick={() => this.changeGraphType(\"debtServices\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Debt service\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"totalDebt\"\r\n                      onClick={() => this.changeGraphType(\"totalDebt\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Total debt service (% of GNI)\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      button\r\n                      key=\"currentGni\"\r\n                      onClick={() => this.changeGraphType(\"currentGni\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        {\" \"}\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <Arrow />\r\n                        </ListItemIcon>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"GNI (current US$)\" />\r\n                    </ListItem>\r\n                  </>\r\n                </List>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion\r\n              expanded={this.state.isExpanded === \"panel4\"}\r\n              onChange={this.handleChange(\"panel4\")}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\"\r\n              >\r\n                <Typography sx={{ width: \"33%\", flexShrink: 0 }}>\r\n                  Crops\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <List>\r\n                  <>\r\n                    <ListItem\r\n                      button\r\n                      key=\"bananas\"\r\n                      onClick={() => this.changeGraphType(\"bananas\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Bananas\" />\r\n                    </ListItem>\r\n                  </>\r\n                </List>\r\n                <List>\r\n                  <>\r\n                    <ListItem\r\n                      button\r\n                      key=\"mangoes\"\r\n                      onClick={() => this.changeGraphType(\"mangoes\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Mangoes\" />\r\n                    </ListItem>\r\n                  </>\r\n                </List>\r\n                <List>\r\n                  <>\r\n                    <ListItem\r\n                      button\r\n                      key=\"walnuts\"\r\n                      onClick={() => this.changeGraphType(\"walnuts\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Walnuts\" />\r\n                    </ListItem>\r\n                  </>\r\n                </List>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion\r\n              expanded={this.state.isExpanded === \"panel5\"}\r\n              onChange={this.handleChange(\"panel5\")}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\"\r\n              >\r\n                <Typography sx={{ width: \"33%\", flexShrink: 0 }}>\r\n                  Yield\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <List>\r\n                  <>\r\n                    <ListItem\r\n                      button\r\n                      key=\"iran\"\r\n                      onClick={() => this.changeGraphType(\"walnutsiran\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Walnuts\" />\r\n                    </ListItem>\r\n                  </>\r\n                </List>\r\n                <List>\r\n                  <>\r\n                    <ListItem\r\n                      button\r\n                      key=\"philippines\"\r\n                      onClick={() => this.changeGraphType(\"mangoesphilippines\")}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Arrow />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Mangoes\" />\r\n                    </ListItem>\r\n                  </>\r\n                </List>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n\r\n\r\n            <Divider />\r\n            <ListItem\r\n              button\r\n              key=\"ImportExport\"\r\n              onClick={() => this.changeGraphType(\"import\")}\r\n            >\r\n              {\" \"}\r\n              <ListItemText primary=\"Import/Export\" />\r\n            </ListItem>\r\n          </Box>\r\n        </Drawer>\r\n        <Box\r\n          component=\"main\"\r\n          sx={{ flexGrow: 1, p: 3 }}\r\n          style={{ \"padding-left\": \"250px\", \"padding-top\": \"100px\" }}\r\n        >\r\n          {this.state.page === \"gdp\" ? <Gdp /> : null}\r\n          {this.state.page === \"manufacturing\" ? <Manufacturing /> : null}\r\n          {this.state.page === \"annualgrowth\" ? <AnnualGrowth /> : null}\r\n\r\n          {this.state.page === \"gdpCurrentUsd\" ? <GdpCurrentUsd /> : null}\r\n          {this.state.page === \"currentAccountBalance\" ? (\r\n            <GdpCurrentAccoutnBalance />\r\n          ) : null}\r\n          {this.state.page === \"fdiNet\" ? <FDINet /> : null}\r\n          {this.state.page === \"fdiNetInflows\" ? <FDINetInflows /> : null}\r\n          {this.state.page === \"fDINetOutflows\" ? <FDINetOutflows /> : null}\r\n          {this.state.page === \"fDINetOutflowsPercentGDP\" ? (\r\n            <FDINetOutflowsPercentGDP />\r\n          ) : null}\r\n\r\n          {this.state.page === \"credit\" ? <Credit /> : null}\r\n          {/* yield */}\r\n          {this.state.page === \"walnutsiran\" ? <WalnutsIran /> : null}\r\n          {this.state.page === \"mangoesphilippines\" ? <MangoesPhilippines /> : null}\r\n\r\n          {this.state.page === \"fertilizer_prod\" ? <FertilizerProd /> : null}\r\n          {this.state.page === \"fertilizer_cons\" ? <FertilizerCons /> : null}\r\n          {/* Debt Services */}\r\n          {this.state.page === \"importReserves\" ? <ImportReserves /> : null}\r\n          {this.state.page === \"goldReserves\" ? <GoldReserves /> : null}\r\n          {this.state.page === \"totalReserves\" ? <TotalReserves /> : null}\r\n          {this.state.page === \"debtServices\" ? <DebtServices /> : null}\r\n          {this.state.page === \"totalDebt\" ? <TotalDebt /> : null}\r\n          {this.state.page === \"currentGni\" ? <CurrentGni /> : null}\r\n          {this.state.page === \"import\" ? <Import /> : null}\r\n\r\n          {this.state.page === \"bananas\" ? <Bananas /> : null}\r\n          {this.state.page === \"mangoes\" ? <Mangoes /> : null}\r\n          {this.state.page === \"walnuts\" ? <Walnuts /> : null}\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  userInfo: state.userInfo\r\n})\r\n\r\nexport default connect(mapStateToProps)(DashBoard);\r\n// export default DashBoard;\r\n","import Container from \"@material-ui/core/Container\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useState, useEffect } from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport \"./App.css\";\r\nimport Header from \"../src/views/Header/header\";\r\nimport DashBoard from \"../src/views/Container/DashBoard/DashBoard\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#b12a30\",\r\n    },\r\n    secondary: {\r\n      main: \"#ff4400\",\r\n      contrastText: \"#ffcc00\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [country, setCountry] = useState(\"USA\");\r\n  const changeCountry = (ct) => {\r\n    setCountry(ct);\r\n  };\r\n  return (\r\n    <Router>\r\n      <div className=\"AirlineApp\">\r\n        {/* <Header isLoggedIn={isLoggedIn} onIsLoggedIn={onIsLoggedIn} /> */}\r\n        <Box sx={{ display: \"flex\" }}>\r\n          <CssBaseline />\r\n          <Header changeCountry={setCountry} />\r\n          <Container fluid>\r\n            <ThemeProvider theme={theme}>\r\n              <Switch>\r\n                <Route\r\n                  path=\"/\"\r\n                  exact\r\n                  component={() => <DashBoard country={country} />}\r\n                />\r\n                {/* <Route path='/home' exact component={() => <Home isLoggedIn={isLoggedIn} onIsLoggedIn={onIsLoggedIn} />} /> */}\r\n              </Switch>\r\n            </ThemeProvider>\r\n          </Container>\r\n        </Box>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initState = {\r\n    country:\"India\",\r\n    name:\"Government Representive\",\r\n    disableAnno: true,\r\n    disablePredict:false\r\n}\r\n\r\nexport const userReducer = (state=initState,action) => {\r\n    let type = action.type;\r\n    switch(type) {\r\n        case \"setName\":\r\n            let nameState = {\r\n                ...state,'name':action.payload\r\n            }\r\n            return nameState;\r\n        case \"setCountry\":\r\n            let newstate = {\r\n                ...state,'country':action.payload\r\n            }\r\n            return newstate;\r\n        case \"disableAnno\":\r\n            let stt = {\r\n                ...state,'disableAnno':action.payload\r\n            }\r\n            return stt;\r\n        case \"disablePredict\":\r\n            let st = {\r\n                ...state,'disablePredict':action.payload\r\n            }\r\n            return st;\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { userReducer } from './userReducer.js'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst appReducers = combineReducers({\r\n  //Write you individual reducer here like below\r\n  userInfo: userReducer\r\n})\r\n\r\nconst reducer = (state, action) => {\r\n  //Upon logout, everything will be set to initial state\r\n  if (action.type === 'logout') {\r\n    return appReducers(undefined, action)\r\n  }\r\n  return appReducers(state, action)\r\n}\r\n\r\nconst reducers = persistReducer(persistConfig, reducer)\r\n\r\nexport default reducers\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from \"redux-thunk\"\r\nimport reducers from './reducer/reducers.js';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {persistStore} from \"redux-persist\";\r\n\r\nexport const store = createStore(reducers, composeWithDevTools(\r\n  applyMiddleware(thunk),\r\n));\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\nimport {store,persistor} from './reduxutils/store';\r\n\r\n\r\n// ReactDOM.render(\r\n//   <Provider store={store}>\r\n//     <BrowserRouter>\r\n//       <App />\r\n//   </BrowserRouter>\r\n// </Provider>,\r\n\r\n\r\n//   document.getElementById('root')\r\n// );\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={<App />} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}